package model;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class CarExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table cars
     *
     * @ibatorgenerated Sun Jul 12 22:13:41 CST 2009
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table cars
     *
     * @ibatorgenerated Sun Jul 12 22:13:41 CST 2009
     */
    protected List oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table cars
     *
     * @ibatorgenerated Sun Jul 12 22:13:41 CST 2009
     */
    public CarExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table cars
     *
     * @ibatorgenerated Sun Jul 12 22:13:41 CST 2009
     */
    protected CarExample(CarExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table cars
     *
     * @ibatorgenerated Sun Jul 12 22:13:41 CST 2009
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table cars
     *
     * @ibatorgenerated Sun Jul 12 22:13:41 CST 2009
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table cars
     *
     * @ibatorgenerated Sun Jul 12 22:13:41 CST 2009
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table cars
     *
     * @ibatorgenerated Sun Jul 12 22:13:41 CST 2009
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table cars
     *
     * @ibatorgenerated Sun Jul 12 22:13:41 CST 2009
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table cars
     *
     * @ibatorgenerated Sun Jul 12 22:13:41 CST 2009
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table cars
     *
     * @ibatorgenerated Sun Jul 12 22:13:41 CST 2009
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table cars
     *
     * @ibatorgenerated Sun Jul 12 22:13:41 CST 2009
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List dateList = new ArrayList();
            Iterator iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(((Date)iter.next()).getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return this;
        }

        public Criteria andIdIn(List values) {
            addCriterion("id in", values, "id");
            return this;
        }

        public Criteria andIdNotIn(List values) {
            addCriterion("id not in", values, "id");
            return this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return this;
        }

        public Criteria andProducerIsNull() {
            addCriterion("producer is null");
            return this;
        }

        public Criteria andProducerIsNotNull() {
            addCriterion("producer is not null");
            return this;
        }

        public Criteria andProducerEqualTo(String value) {
            addCriterion("producer =", value, "producer");
            return this;
        }

        public Criteria andProducerNotEqualTo(String value) {
            addCriterion("producer <>", value, "producer");
            return this;
        }

        public Criteria andProducerGreaterThan(String value) {
            addCriterion("producer >", value, "producer");
            return this;
        }

        public Criteria andProducerGreaterThanOrEqualTo(String value) {
            addCriterion("producer >=", value, "producer");
            return this;
        }

        public Criteria andProducerLessThan(String value) {
            addCriterion("producer <", value, "producer");
            return this;
        }

        public Criteria andProducerLessThanOrEqualTo(String value) {
            addCriterion("producer <=", value, "producer");
            return this;
        }

        public Criteria andProducerLike(String value) {
            addCriterion("producer like", value, "producer");
            return this;
        }

        public Criteria andProducerNotLike(String value) {
            addCriterion("producer not like", value, "producer");
            return this;
        }

        public Criteria andProducerIn(List values) {
            addCriterion("producer in", values, "producer");
            return this;
        }

        public Criteria andProducerNotIn(List values) {
            addCriterion("producer not in", values, "producer");
            return this;
        }

        public Criteria andProducerBetween(String value1, String value2) {
            addCriterion("producer between", value1, value2, "producer");
            return this;
        }

        public Criteria andProducerNotBetween(String value1, String value2) {
            addCriterion("producer not between", value1, value2, "producer");
            return this;
        }

        public Criteria andModelIsNull() {
            addCriterion("model is null");
            return this;
        }

        public Criteria andModelIsNotNull() {
            addCriterion("model is not null");
            return this;
        }

        public Criteria andModelEqualTo(String value) {
            addCriterion("model =", value, "model");
            return this;
        }

        public Criteria andModelNotEqualTo(String value) {
            addCriterion("model <>", value, "model");
            return this;
        }

        public Criteria andModelGreaterThan(String value) {
            addCriterion("model >", value, "model");
            return this;
        }

        public Criteria andModelGreaterThanOrEqualTo(String value) {
            addCriterion("model >=", value, "model");
            return this;
        }

        public Criteria andModelLessThan(String value) {
            addCriterion("model <", value, "model");
            return this;
        }

        public Criteria andModelLessThanOrEqualTo(String value) {
            addCriterion("model <=", value, "model");
            return this;
        }

        public Criteria andModelLike(String value) {
            addCriterion("model like", value, "model");
            return this;
        }

        public Criteria andModelNotLike(String value) {
            addCriterion("model not like", value, "model");
            return this;
        }

        public Criteria andModelIn(List values) {
            addCriterion("model in", values, "model");
            return this;
        }

        public Criteria andModelNotIn(List values) {
            addCriterion("model not in", values, "model");
            return this;
        }

        public Criteria andModelBetween(String value1, String value2) {
            addCriterion("model between", value1, value2, "model");
            return this;
        }

        public Criteria andModelNotBetween(String value1, String value2) {
            addCriterion("model not between", value1, value2, "model");
            return this;
        }

        public Criteria andPriceLevelIsNull() {
            addCriterion("priceLevel is null");
            return this;
        }

        public Criteria andPriceLevelIsNotNull() {
            addCriterion("priceLevel is not null");
            return this;
        }

        public Criteria andPriceLevelEqualTo(Short value) {
            addCriterion("priceLevel =", value, "priceLevel");
            return this;
        }

        public Criteria andPriceLevelNotEqualTo(Short value) {
            addCriterion("priceLevel <>", value, "priceLevel");
            return this;
        }

        public Criteria andPriceLevelGreaterThan(Short value) {
            addCriterion("priceLevel >", value, "priceLevel");
            return this;
        }

        public Criteria andPriceLevelGreaterThanOrEqualTo(Short value) {
            addCriterion("priceLevel >=", value, "priceLevel");
            return this;
        }

        public Criteria andPriceLevelLessThan(Short value) {
            addCriterion("priceLevel <", value, "priceLevel");
            return this;
        }

        public Criteria andPriceLevelLessThanOrEqualTo(Short value) {
            addCriterion("priceLevel <=", value, "priceLevel");
            return this;
        }

        public Criteria andPriceLevelIn(List values) {
            addCriterion("priceLevel in", values, "priceLevel");
            return this;
        }

        public Criteria andPriceLevelNotIn(List values) {
            addCriterion("priceLevel not in", values, "priceLevel");
            return this;
        }

        public Criteria andPriceLevelBetween(Short value1, Short value2) {
            addCriterion("priceLevel between", value1, value2, "priceLevel");
            return this;
        }

        public Criteria andPriceLevelNotBetween(Short value1, Short value2) {
            addCriterion("priceLevel not between", value1, value2, "priceLevel");
            return this;
        }

        public Criteria andYearIsNull() {
            addCriterion("Year is null");
            return this;
        }

        public Criteria andYearIsNotNull() {
            addCriterion("Year is not null");
            return this;
        }

        public Criteria andYearEqualTo(Date value) {
            addCriterionForJDBCDate("Year =", value, "year");
            return this;
        }

        public Criteria andYearNotEqualTo(Date value) {
            addCriterionForJDBCDate("Year <>", value, "year");
            return this;
        }

        public Criteria andYearGreaterThan(Date value) {
            addCriterionForJDBCDate("Year >", value, "year");
            return this;
        }

        public Criteria andYearGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("Year >=", value, "year");
            return this;
        }

        public Criteria andYearLessThan(Date value) {
            addCriterionForJDBCDate("Year <", value, "year");
            return this;
        }

        public Criteria andYearLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("Year <=", value, "year");
            return this;
        }

        public Criteria andYearIn(List values) {
            addCriterionForJDBCDate("Year in", values, "year");
            return this;
        }

        public Criteria andYearNotIn(List values) {
            addCriterionForJDBCDate("Year not in", values, "year");
            return this;
        }

        public Criteria andYearBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("Year between", value1, value2, "year");
            return this;
        }

        public Criteria andYearNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("Year not between", value1, value2, "year");
            return this;
        }

        public Criteria andIsMtIsNull() {
            addCriterion("isMt is null");
            return this;
        }

        public Criteria andIsMtIsNotNull() {
            addCriterion("isMt is not null");
            return this;
        }

        public Criteria andIsMtEqualTo(Boolean value) {
            addCriterion("isMt =", value, "isMt");
            return this;
        }

        public Criteria andIsMtNotEqualTo(Boolean value) {
            addCriterion("isMt <>", value, "isMt");
            return this;
        }

        public Criteria andIsMtGreaterThan(Boolean value) {
            addCriterion("isMt >", value, "isMt");
            return this;
        }

        public Criteria andIsMtGreaterThanOrEqualTo(Boolean value) {
            addCriterion("isMt >=", value, "isMt");
            return this;
        }

        public Criteria andIsMtLessThan(Boolean value) {
            addCriterion("isMt <", value, "isMt");
            return this;
        }

        public Criteria andIsMtLessThanOrEqualTo(Boolean value) {
            addCriterion("isMt <=", value, "isMt");
            return this;
        }

        public Criteria andIsMtIn(List values) {
            addCriterion("isMt in", values, "isMt");
            return this;
        }

        public Criteria andIsMtNotIn(List values) {
            addCriterion("isMt not in", values, "isMt");
            return this;
        }

        public Criteria andIsMtBetween(Boolean value1, Boolean value2) {
            addCriterion("isMt between", value1, value2, "isMt");
            return this;
        }

        public Criteria andIsMtNotBetween(Boolean value1, Boolean value2) {
            addCriterion("isMt not between", value1, value2, "isMt");
            return this;
        }

        public Criteria andPaiLiangIsNull() {
            addCriterion("paiLiang is null");
            return this;
        }

        public Criteria andPaiLiangIsNotNull() {
            addCriterion("paiLiang is not null");
            return this;
        }

        public Criteria andPaiLiangEqualTo(String value) {
            addCriterion("paiLiang =", value, "paiLiang");
            return this;
        }

        public Criteria andPaiLiangNotEqualTo(String value) {
            addCriterion("paiLiang <>", value, "paiLiang");
            return this;
        }

        public Criteria andPaiLiangGreaterThan(String value) {
            addCriterion("paiLiang >", value, "paiLiang");
            return this;
        }

        public Criteria andPaiLiangGreaterThanOrEqualTo(String value) {
            addCriterion("paiLiang >=", value, "paiLiang");
            return this;
        }

        public Criteria andPaiLiangLessThan(String value) {
            addCriterion("paiLiang <", value, "paiLiang");
            return this;
        }

        public Criteria andPaiLiangLessThanOrEqualTo(String value) {
            addCriterion("paiLiang <=", value, "paiLiang");
            return this;
        }

        public Criteria andPaiLiangLike(String value) {
            addCriterion("paiLiang like", value, "paiLiang");
            return this;
        }

        public Criteria andPaiLiangNotLike(String value) {
            addCriterion("paiLiang not like", value, "paiLiang");
            return this;
        }

        public Criteria andPaiLiangIn(List values) {
            addCriterion("paiLiang in", values, "paiLiang");
            return this;
        }

        public Criteria andPaiLiangNotIn(List values) {
            addCriterion("paiLiang not in", values, "paiLiang");
            return this;
        }

        public Criteria andPaiLiangBetween(String value1, String value2) {
            addCriterion("paiLiang between", value1, value2, "paiLiang");
            return this;
        }

        public Criteria andPaiLiangNotBetween(String value1, String value2) {
            addCriterion("paiLiang not between", value1, value2, "paiLiang");
            return this;
        }

        public Criteria andAvgLPMIsNull() {
            addCriterion("avgLPM is null");
            return this;
        }

        public Criteria andAvgLPMIsNotNull() {
            addCriterion("avgLPM is not null");
            return this;
        }

        public Criteria andAvgLPMEqualTo(Byte value) {
            addCriterion("avgLPM =", value, "avgLPM");
            return this;
        }

        public Criteria andAvgLPMNotEqualTo(Byte value) {
            addCriterion("avgLPM <>", value, "avgLPM");
            return this;
        }

        public Criteria andAvgLPMGreaterThan(Byte value) {
            addCriterion("avgLPM >", value, "avgLPM");
            return this;
        }

        public Criteria andAvgLPMGreaterThanOrEqualTo(Byte value) {
            addCriterion("avgLPM >=", value, "avgLPM");
            return this;
        }

        public Criteria andAvgLPMLessThan(Byte value) {
            addCriterion("avgLPM <", value, "avgLPM");
            return this;
        }

        public Criteria andAvgLPMLessThanOrEqualTo(Byte value) {
            addCriterion("avgLPM <=", value, "avgLPM");
            return this;
        }

        public Criteria andAvgLPMIn(List values) {
            addCriterion("avgLPM in", values, "avgLPM");
            return this;
        }

        public Criteria andAvgLPMNotIn(List values) {
            addCriterion("avgLPM not in", values, "avgLPM");
            return this;
        }

        public Criteria andAvgLPMBetween(Byte value1, Byte value2) {
            addCriterion("avgLPM between", value1, value2, "avgLPM");
            return this;
        }

        public Criteria andAvgLPMNotBetween(Byte value1, Byte value2) {
            addCriterion("avgLPM not between", value1, value2, "avgLPM");
            return this;
        }

        public Criteria andHybridIsNull() {
            addCriterion("hybrid is null");
            return this;
        }

        public Criteria andHybridIsNotNull() {
            addCriterion("hybrid is not null");
            return this;
        }

        public Criteria andHybridEqualTo(String value) {
            addCriterion("hybrid =", value, "hybrid");
            return this;
        }

        public Criteria andHybridNotEqualTo(String value) {
            addCriterion("hybrid <>", value, "hybrid");
            return this;
        }

        public Criteria andHybridGreaterThan(String value) {
            addCriterion("hybrid >", value, "hybrid");
            return this;
        }

        public Criteria andHybridGreaterThanOrEqualTo(String value) {
            addCriterion("hybrid >=", value, "hybrid");
            return this;
        }

        public Criteria andHybridLessThan(String value) {
            addCriterion("hybrid <", value, "hybrid");
            return this;
        }

        public Criteria andHybridLessThanOrEqualTo(String value) {
            addCriterion("hybrid <=", value, "hybrid");
            return this;
        }

        public Criteria andHybridLike(String value) {
            addCriterion("hybrid like", value, "hybrid");
            return this;
        }

        public Criteria andHybridNotLike(String value) {
            addCriterion("hybrid not like", value, "hybrid");
            return this;
        }

        public Criteria andHybridIn(List values) {
            addCriterion("hybrid in", values, "hybrid");
            return this;
        }

        public Criteria andHybridNotIn(List values) {
            addCriterion("hybrid not in", values, "hybrid");
            return this;
        }

        public Criteria andHybridBetween(String value1, String value2) {
            addCriterion("hybrid between", value1, value2, "hybrid");
            return this;
        }

        public Criteria andHybridNotBetween(String value1, String value2) {
            addCriterion("hybrid not between", value1, value2, "hybrid");
            return this;
        }
    }
}
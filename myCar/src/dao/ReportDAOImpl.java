package dao;

import com.ibatis.sqlmap.client.SqlMapClient;
import java.sql.SQLException;
import java.util.List;
import model.Report;
import model.ReportExample;

public class ReportDAOImpl implements ReportDAO {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table statistics
     *
     * @ibatorgenerated Sun Jul 12 22:19:06 CST 2009
     */
    private SqlMapClient sqlMapClient;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table statistics
     *
     * @ibatorgenerated Sun Jul 12 22:19:06 CST 2009
     */
    public ReportDAOImpl(SqlMapClient sqlMapClient) {
        super();
        this.sqlMapClient = sqlMapClient;
    }

    /**
     * delete records from both tables
     * @param id
     * @throws SQLException
     */
	public void deleteLastReportForUserID(int id) throws SQLException
	{
		sqlMapClient.delete("statistics.deleteLastReportForUserID", id);//avg lpm
	}
	
    public Report getLastReportForUserID(Integer uid) throws SQLException 
    {
    	return (Report) sqlMapClient.queryForObject("statistics.getLastReportForUserID", uid);
    }
    
    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table statistics
     *
     * @ibatorgenerated Sun Jul 12 22:19:06 CST 2009
     */
    public int countByExample(ReportExample example) throws SQLException {
        Integer count = (Integer)  sqlMapClient.queryForObject("statistics.ibatorgenerated_countByExample", example);
        return count.intValue();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table statistics
     *
     * @ibatorgenerated Sun Jul 12 22:19:06 CST 2009
     */
    public int deleteByExample(ReportExample example) throws SQLException {
        int rows = sqlMapClient.delete("statistics.ibatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table statistics
     *
     * @ibatorgenerated Sun Jul 12 22:19:06 CST 2009
     */
    public int deleteByPrimaryKey(Integer id) throws SQLException {
        Report key = new Report();
        key.setId(id);
        int rows = sqlMapClient.delete("statistics.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table statistics
     *
     * @ibatorgenerated Sun Jul 12 22:19:06 CST 2009
     */
    public void insert(Report record) throws SQLException {
        sqlMapClient.insert("statistics.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table statistics
     *
     * @ibatorgenerated Sun Jul 12 22:19:06 CST 2009
     */
    public void insertSelective(Report record) throws SQLException {
        sqlMapClient.insert("statistics.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table statistics
     *
     * @ibatorgenerated Sun Jul 12 22:19:06 CST 2009
     */
    public List selectByExample(ReportExample example) throws SQLException {
        List list = sqlMapClient.queryForList("statistics.ibatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table statistics
     *
     * @ibatorgenerated Sun Jul 12 22:19:06 CST 2009
     */
    public Report selectByPrimaryKey(Integer id) throws SQLException {
        Report key = new Report();
        key.setId(id);
        Report record = (Report) sqlMapClient.queryForObject("statistics.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table statistics
     *
     * @ibatorgenerated Sun Jul 12 22:19:06 CST 2009
     */
    public int updateByExampleSelective(Report record, ReportExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = sqlMapClient.update("statistics.ibatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table statistics
     *
     * @ibatorgenerated Sun Jul 12 22:19:06 CST 2009
     */
    public int updateByExample(Report record, ReportExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = sqlMapClient.update("statistics.ibatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table statistics
     *
     * @ibatorgenerated Sun Jul 12 22:19:06 CST 2009
     */
    public int updateByPrimaryKeySelective(Report record) throws SQLException {
        int rows = sqlMapClient.update("statistics.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table statistics
     *
     * @ibatorgenerated Sun Jul 12 22:19:06 CST 2009
     */
    public int updateByPrimaryKey(Report record) throws SQLException {
        int rows = sqlMapClient.update("statistics.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table statistics
     *
     * @ibatorgenerated Sun Jul 12 22:19:06 CST 2009
     */
    private static class UpdateByExampleParms extends ReportExample {
        private Object record;

        public UpdateByExampleParms(Object record, ReportExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }

}